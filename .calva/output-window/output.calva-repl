; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ??

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj?user-activate?>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: joyride...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs?cljs.user?>  ; Use `alt+enter` to evaluate
nil
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
#object[$5]
clj?plg?> 
2nil
clj?plg?> 
2nil
clj?plg?> 
2nil
clj?plg?> 
2
nil
clj?plg?> 
1
clj?plg?> 
1
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; Too many arguments to def
clj?plg?> 
#'plg/test
clj?plg?> 
#'plg/test1
clj?plg?> 
#'plg/test1
clj?plg?> 
2
clj?plg?> 
; ea.call is not a function
clj?plg?> 
#'plg/test1
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
#'plg/test1
clj?plg?> 
#'plg/test1
clj?plg?> 
1
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
; Could not resolve symbol: testing
clj?plg?> 
3
clj?plg?> 
2
nil
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
; Unable to resolve classname: java.io.PushbackReader
clj?plg?> 
; Unmatched delimiter: )
clj?plg?> 
1
clj?plg?> 
#object[t_ Unbound: #'plg/x]
clj?plg?> 
##NaN
clj?plg?> 
2
clj?plg?> 
3
clj?plg?> 
#'plg/test1
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
3
clj?plg?> 
; REPL history clearedclj?plg?> #'plg/test1
clj?plg?> 
nil
clj?plg?> 
3
clj?plg?> 
"testing stuff"
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
nil
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
; Could not resolve symbol: parse-list
clj?plg?> 
#'plg/str
clj?plg?> 
#'plg/str
clj?plg?> 
; Could not resolve symbol: asda
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
nil
nil
clj?plg?> 
#'plg/str
clj?plg?> 
(:plg/string asda)
nil
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; ea.call is not a function
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
#'plg/array
clj?plg?> 
; Could not resolve symbol: string
clj?plg?> 
; Could not resolve symbol: string
clj?plg?> 
#'plg/string
clj?plg?> 
#'plg/array
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
(:plg/array "asda")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/array "asda" "dsad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/array "asda" "dsad")
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
#'plg/args
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
("asda" "dsad")
clj?plg?> 
; No protocol method IMapEntry.-key defined for type object: (:plg/array "asda" "dsad")
clj?plg?> 
("asda" "dsad")
clj?plg?> 
#'plg/key
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
:plg/array
clj?plg?> 
("asda" "dsad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
nil
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
#'plg/string
clj?plg?> 
#'plg/array
clj?plg?> 
#'plg/args
clj?plg?> 
#'plg/key
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
nil
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
#'plg/string
clj?plg?> 
#'plg/array
clj?plg?> 
#'plg/args
clj?plg?> 
#'plg/key
clj?plg?> 
(:plg/string "asda")
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
(:plg/string "asdad")
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
#'plg/array
clj?plg?> 
#'plg/args
clj?plg?> 
#'plg/key
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
; Wrong number of args (0) passed to: :plg/tag
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
#'plg/tag
clj?plg?> 
("asda" "dsad")
clj?plg?> 
:plg/array
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
nil
clj?plg?> 
:div
clj?plg?> 
:plg/tag
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
(:div ("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
(:div ("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
true
clj?plg?> 
(:div ("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/tag
clj?plg?> 
#'plg/name
clj?plg?> 
:plg/array
clj?plg?> 
:plg/tag
clj?plg?> 
#'plg/args
clj?plg?> 
()
clj?plg?> 
#'plg/args
clj?plg?> 
()
clj?plg?> 
()
clj?plg?> 
#'plg/args
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
#'plg/tag
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
#'plg/name
clj?plg?> 
:div
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
:div
clj?plg?> 
()
clj?plg?> 
("asd" "dsa" (:plg/tag :br nil))
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
(("asd"))
clj?plg?> 
()
clj?plg?> 
(("asd"))
clj?plg?> 
(("asd"))
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
:div
clj?plg?> 
#'plg/array
clj?plg?> 
#'plg/tag-args
clj?plg?> 
#'plg/tag-name
clj?plg?> 
#'plg/tag
clj?plg?> 
("dsad")
clj?plg?> 
"asda"
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
(("asd"))
clj?plg?> 
:div
clj?plg?> 
(("asd" "dsa" (:plg/tag :br nil)))
clj?plg?> 
(("asd"))
clj?plg?> 
#'plg/tag-args
clj?plg?> 
#'plg/tag-args
clj?plg?> 
(:div ("asd"))
clj?plg?> 
#'plg/tag-args
clj?plg?> 
#'plg/tag-name
clj?plg?> 
("asd" "dsa" (:plg/tag :br nil))
clj?plg?> 
("asd")
clj?plg?> 
:div
clj?plg?> 
("div")
clj?plg?> 
("asd")
clj?plg?> 
("div")
clj?plg?> 
("div")
clj?plg?> 
#'plg/tag
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
"asd"
clj?plg?> 
"div"
clj?plg?> 
"asd"
clj?plg?> 
:div
clj?plg?> 
"asda"
clj?plg?> 
"dsad"
clj?plg?> 
#'plg/tag
clj?plg?> 
("asd")
clj?plg?> 
("div")
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
#'plg/test1
clj?plg?> 
3
clj?plg?> 
#'plg/array
clj?plg?> 
#'plg/tag-args
clj?plg?> 
#'plg/tag-name
clj?plg?> 
#'plg/tag
clj?plg?> 
"dsad"
clj?plg?> 
"asda"
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
("asd")
clj?plg?> 
("div")
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
#'plg/tag?
clj?plg?> 
#'plg/element-type
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/tag
clj?plg?> 
; ea.call is not a function
clj?plg?> 
:plg/rest
clj?plg?> 
#'plg/element-type
clj?plg?> 
:plg/sring
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/sring
clj?plg?> 
"dsad"
clj?plg?> 
"asda"
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
("asd")
clj?plg?> 
("div")
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
:div
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
("div")
clj?plg?> 
("asd")
clj?plg?> 
("div")
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
("1" "2" "3" "4")
clj?plg?> 
"2"
clj?plg?> 
; Could not resolve symbol: third
clj?plg?> 
"2"
clj?plg?> 
"2"
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
#'plg/match-name
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
#'plg/match-name
clj?plg?> 
:plg/sring
clj?plg?> 
:plg/tag
clj?plg?> 
"dsad"
clj?plg?> 
"asda"
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
("asd")
clj?plg?> 
"2"
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
:div
clj?plg?> 
#'plg/match-name
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
(:plg/tag
 :root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
#'plg/use-sample
clj?plg?> 
; ea.call is not a function
clj?plg?> 
; Too many arguments to def
clj?plg?> 
; Too many arguments to def
clj?plg?> 
; = is not ISeqable
clj?plg?> 
#'plg/match-name
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
#'plg/use-sample
clj?plg?> 
#'plg/use-sample
clj?plg?> 
#'plg/use-sample
clj?plg?> 
; ea.call is not a function
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
"dsad"
clj?plg?> 
#'plg/tag-args
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
(:root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:plg/tag
 :root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:plg/tag
 :root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:plg/tag :div ("asd" "dsa" (:plg/tag :br)))
clj?plg?> 
(:root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:plg/tag
 :root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(:root
 ((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(((:plg/tag :div ("empty"))
  (:plg/tag
   :students
   ((:plg/tag :student ("name1"))
    (:plg/tag :student ("name2")) 
    (:plg/tag :student ("name3")) 
    (:plg/tag :student ("name4"))))))
clj?plg?> 
(("asd" "dsa" (:plg/tag :br)))
clj?plg?> 
; a.call is not a function
clj?plg?> 
(("asd" "dsa" (:plg/tag :br)))
clj?plg?> 
#object[r]
clj?plg?> 
(("asd" "dsa" (:plg/tag :br)))
clj?plg?> 
("asd" "dsa" (:plg/tag :br))
clj?plg?> 
#'plg/tag-args
clj?plg?> 
#'plg/tag-name
clj?plg?> 
#'plg/tag
clj?plg?> 
#'plg/tag?
clj?plg?> 
"asd"
clj?plg?> 
:div
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
:div
clj?plg?> 
("asd" "dsa" (:plg/tag nil))
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
(:rest "val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val")
clj?plg?> 
("val" "data")
clj?plg?> 
("val" "data")
clj?plg?> 
; Attempting to call unbound fn: #'plg/x
clj?plg?> 
; Attempting to call unbound fn: #'plg/x
clj?plg?> 
; Attempting to call unbound fn: #'plg/x
clj?plg?> 
; Attempting to call unbound fn: #'plg/x
clj?plg?> 
#'plg/x
clj?plg?> 
("val" "data")
clj?plg?> 
#'plg/x
clj?plg?> 
(nil)
clj?plg?> 
(("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div "da" "net")
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div "da" "net")
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div "da" "net")
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
(:plg/tag :div ("da" "net"))
clj?plg?> 
#'plg/x
clj?plg?> 
"asd"
clj?plg?> 
; ja.call is not a function
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
#'plg/tag-args
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
(:plg/tag :div (("asd" "dsa" (plg/tag :br))))
clj?plg?> 
((("asd" "dsa" (plg/tag :br))))
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
#'plg/tag-args
clj?plg?> 
"asd"
clj?plg?> 
((("asd" "dsa" (plg/tag :br))))
clj?plg?> 
(("asd" "dsa" (plg/tag :br)))
clj?plg?> 
(("asd" "dsa" (plg/tag :br)))
clj?plg?> 
:div
clj?plg?> 
((("asd" "dsa" (plg/tag :br))))
clj?plg?> 
; Invalid arity: 1
clj?plg?> 
((("asd" "dsa" (plg/tag :br))))
clj?plg?> 
; ea.call is not a function
clj?plg?> 
(:div (("asd" "dsa" (plg/tag :br))))
clj?plg?> 
(:div ("asd" "dsa" (:plg/tag nil)))
clj?plg?> 
"asd"
clj?plg?> 
"asd"
clj?plg?> 
(:div ("1" "2" "3"))
clj?plg?> 
(:div (("1" "2" "3")))
clj?plg?> 
(:div (("1" "2" "3")))
clj?plg?> 
("da" (("1" "2" "3")))
clj?plg?> 
(:div (("1" "2" "3")))
clj?plg?> 
(:div ("1" "2" "3"))
clj?plg?> 
("1" "2" "3")
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
#'plg/use-sample-2
clj?plg?> 
(:plg/tag :div ("1" "2" "3"))
clj?plg?> 
("1" "2" "3")
clj?plg?> 
#'plg/use-sample-2
clj?plg?> 
("1" (:plg/tag :key ("val")) "3")
clj?plg?> 
#'plg/use-sample
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
("1" (:plg/tag :key ("val")) "3")
clj?plg?> 
("1" (:plg/tag :key ("val")) "3")
clj?plg?> 
#'plg/use-sample-2
clj?plg?> 
(:plg/tag :div ("empty"))
clj?plg?> 
(:plg/tag :div ("empty"))
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
#'plg/use-sample
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
nil
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/value-is
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
#'plg/value-is
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
#'plg/value-is
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
; Key must be integer
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/value-contains
clj?plg?> 
#'plg/value-contains
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/value-is
clj?plg?> 
#'plg/value-is
clj?plg?> 
#'plg/value-contains
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
nil
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
nil
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
nil
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/name-is
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
nil
clj?plg?> 
#'plg/use-sample
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
nil
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
#'plg/name-is
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
nil
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
nil
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
nil
clj?plg?> 
nil
clj?plg?> 
; Could not resolve symbol: split
clj?plg?> 
; Could not resolve symbol: string/split
clj?plg?> 
(:plg/string "path/d/te")
clj?plg?> 
; Function.prototype.apply was called on undefined, which is a undefined and not a function
clj?plg?> 
; Could not resolve symbol: string/split
clj?plg?> 
; Could not resolve symbol: string/split
clj?plg?> 
; Could not resolve symbol: str/split
clj?plg?> 
; No matching clause: 
clj?plg?> 
nil
clj?plg?> 
["path/d/te"]
clj?plg?> 
["path" "d" "te"]
clj?plg?> 
; re-matches must match against a string.
clj?plg?> 
; [line 1, col 25] Unsupported escape character: \d.
clj?plg?> 
["abb234" "a" "bb" "234"]
clj?plg?> 
["abb234" "a" "bb" "234"]
clj?plg?> 
["path" "d" "te"]
clj?plg?> 
["path" "d" "te"]
clj?plg?> 
["abb234" "a" "bb" "234"]
clj?plg?> 
["path" "d" "te"]
clj?plg?> 
["abb234" "a" "bb" "234"]
clj?plg?> 
{:name "aa", :tag "div"}
clj?plg?> 
[:div]
clj?plg?> 
[:tag]
clj?plg?> 
; The map literal starting with hash-map contains 5 form(s). Map literals must contain an even number of forms.
clj?plg?> 
; The map literal starting with hash-map contains 3 form(s). Map literals must contain an even number of forms.
clj?plg?> 
; The map literal starting with hash-map contains 3 form(s). Map literals must contain an even number of forms.
clj?plg?> 
#'plg/data
clj?plg?> 
{:name "aa", :tag "div"}
clj?plg?> 
nil
clj?plg?> 
"aa"
clj?plg?> 
"aa"
clj?plg?> 
"div"
clj?plg?> 
nil
clj?plg?> 
"div"
clj?plg?> 
#'plg/data
clj?plg?> 
#object[Function]
clj?plg?> 
#'plg/dict-data
clj?plg?> 
false
clj?plg?> 
#'plg/dict-data
clj?plg?> 
false
clj?plg?> 
#object[Function]
clj?plg?> 
"aa"
clj?plg?> 
"aa"
clj?plg?> 
#'plg/dict-data
clj?plg?> 
"name"
clj?plg?> 
"name"
clj?plg?> 
"name"
clj?plg?> 
#'plg/condition1
clj?plg?> 
#'plg/match-query
clj?plg?> 
"name"
clj?plg?> 
#'plg/match-all-q
clj?plg?> 
#'plg/match-div-q
clj?plg?> 
#'plg/match-div-q
clj?plg?> 
true
clj?plg?> 
#'plg/match-div-q
clj?plg?> 
#'plg/match-br-q
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
(:plg/tag :name ("value"))
clj?plg?> 
((plg/tag :name "value"))
clj?plg?> 
((plg/tag :name "value") (plg/tag :name "value"))
clj?plg?> 
(plg/tag :name "value")
clj?plg?> 
(plg/tag :name "value")
clj?plg?> 
(:plg/tag :name ("value"))
clj?plg?> 
(:plg/tag :name ("value"))
clj?plg?> 
:plg/tag
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
:plg/tag
clj?plg?> 
:plg/tag
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
"d"
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
plg/expr
clj?plg?> 
(plg/expr)
clj?plg?> 
(plg/expr)
clj?plg?> 
(plg/expr)
clj?plg?> 
(plg/expr)
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
(plg/expr)
clj?plg?> 
(plg/expr)
clj?plg?> 
; Could not resolve symbol: value
clj?plg?> 
(plg/expr)
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
#'plg/find-query
clj?plg?> 
((:plg/tag :name ("value")))
clj?plg?> 
((:plg/tag :name ("value")))
clj?plg?> 
((:plg/tag :name ("value")) (:plg/tag :name ("value")))
clj?plg?> 
((:plg/tag :name ("value")) 2)
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
#'plg/find-query
clj?plg?> 
false
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
#'plg/find-query
clj?plg?> 
(((:plg/tag
   :root
   ((:plg/tag :div ("empty"))
    (:plg/tag
     :students
     ((:plg/tag :student ("name1"))
      (:plg/tag :student ("name2")) 
      (:plg/tag :student ("name3")) 
      (:plg/tag :student ("name4"))))))) 
 ({:tag "div"}))
clj?plg?> 
(((:plg/tag
   :root
   ((:plg/tag :div ("empty"))
    (:plg/tag
     :students
     ((:plg/tag :student ("name1"))
      (:plg/tag :student ("name2"))
      (:plg/tag :student ("name3")) 
      (:plg/tag :student ("name4"))))))) 
 ({:tag "div"} {:tag "br"}))
clj?plg?> 
(((:plg/tag
   :root
   ((:plg/tag :div ("empty"))
    (:plg/tag
     :students
     ((:plg/tag :student ("name1"))
      (:plg/tag :student ("name2")) 
      (:plg/tag :student ("name3")) 
      (:plg/tag :student ("name4"))))))) 
 ({:tag "div"}))
clj?plg?> 
(((:plg/tag
   :root
   ((:plg/tag :div ("empty"))
    (:plg/tag
     :students
     ((:plg/tag :student ("name1"))
      (:plg/tag :student ("name2")) 
      (:plg/tag :student ("name3")) 
      (:plg/tag :student ("name4"))))))) 
 ({:tag "div"}))
clj?plg?> 
#'plg/find-query
clj?plg?> 
[]
clj?plg?> 
#'plg/find-query
clj?plg?> 
#'plg/find-query
clj?plg?> 
#'plg/find-query
clj?plg?> 
#'plg/find-query
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
#'plg/find-query
clj?plg?> 
#'plg/find-query
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
true
clj?plg?> 
#'plg/use-list-sample
clj?plg?> 
#'plg/use-list-sample
clj?plg?> 
#'plg/use-list-sample
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
nil
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[:plg/tag :plg/tag :plg/tag]
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[:plg/tag :plg/tag :plg/tag]
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[:plg/tag :plg/tag :plg/tag]
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
true
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[:plg/tag :plg/tag :plg/tag]
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag :students ((:plg/tag :student ("name4"))))
 (:plg/tag :div ("element")) 
 (:plg/tag :div ("sample")) 
 (:plg/tag nil))
clj?plg?> 
((:plg/tag :students ((:plg/tag :student ("name4"))))
 (:plg/tag :div ("element")) 
 (:plg/tag :div ("sample")) 
 (:plg/tag nil))
clj?plg?> 
true
clj?plg?> 
; Could not resolve symbol: expr
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
true
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
true
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
#'plg/find-query
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
#'plg/find-query
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
true
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
true
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
#'plg/turn-into-list
clj?plg?> 
((:plg/tag :name ("value")) "12")
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
; Too many arguments to def
clj?plg?> 
((:plg/tag :div ("empty"))
 (:plg/tag
  :students
  ((:plg/tag :student ("name1"))
   (:plg/tag :student ("name2")) 
   (:plg/tag :student ("name3")) 
   (:plg/tag :student ("name4")))))
clj?plg?> 
#'plg/use-list-sample
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
[(:plg/tag :br ("br here"))]
clj?plg?> 
[(:plg/tag :div ("empty"))
 (:plg/tag :students ((:plg/tag :student ("name4"))))
 (:plg/tag :div ("element")) 
 (:plg/tag :div ("sample")) 
 (:plg/tag nil) 
 (:plg/tag :br ("br here"))]
clj?plg?> 
[(:plg/tag :br ("br here"))]
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
[(:plg/tag :br ("br here"))]
clj?plg?> 
[(:plg/tag :div ("empty"))
 (:plg/tag :students ((:plg/tag :student ("name4"))))
 (:plg/tag :div ("element")) 
 (:plg/tag :div ("sample")) 
 (:plg/tag nil) 
 (:plg/tag :br ("br here"))]
clj?plg?> 
(:plg/tag nil)
clj?plg?> 
(:plg/tag nil)
clj?plg?> 
(:plg/tag nil)
clj?plg?> 
(:plg/tag nil)
clj?plg?> 
#'plg/tag
clj?plg?> 
#'plg/use-list-sample
clj?plg?> 
(:plg/tag :br)
clj?plg?> 
#'plg/use-sample
clj?plg?> 
#'plg/match-query
clj?plg?> 
true
clj?plg?> 
false
clj?plg?> 
true
clj?plg?> 
#'plg/query-matching-expressions
clj?plg?> 
[(:plg/tag :div ("empty")) (:plg/tag :div ("element")) (:plg/tag :div ("sample"))]
clj?plg?> 
[(:plg/tag :br) (:plg/tag :br ("br here"))]
clj?plg?> 
[(:plg/tag :div ("empty"))
 (:plg/tag :students ((:plg/tag :student ("name4"))))
 (:plg/tag :div ("element")) 
 (:plg/tag :div ("sample")) 
 (:plg/tag :br) 
 (:plg/tag :br ("br here"))]
clj?plg?> 
#'plg/find-query
clj?plg?> 
[(:plg/tag
  :root
  ((:plg/tag :div ("empty"))
   (:plg/tag
    :students
    ((:plg/tag :student ("name1"))
     (:plg/tag :student ("name2")) 
     (:plg/tag :student ("name3")) 
     (:plg/tag :student ("name4"))))))]
clj?plg?> 
